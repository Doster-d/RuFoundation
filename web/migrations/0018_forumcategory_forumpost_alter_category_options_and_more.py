# Generated by Django 4.0.6 on 2022-08-27 20:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django.db.models.lookups


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('web', '0017_update_rimg_syntax_2'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_for_comments', models.BooleanField(default=False, verbose_name='Отображать комментарии к статьям в этом разделе')),
            ],
            options={
                'verbose_name': 'Раздел форума',
                'verbose_name_plural': 'Разделы форума',
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время изменения')),
                ('deleted_at', models.DateTimeField(verbose_name='Время удаления')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('reply_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.forumpost', verbose_name='Ответ на комментарий')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.site', verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Сообщение форума',
                'verbose_name_plural': 'Сообщения форума',
            },
        ),
        migrations.AlterModelOptions(
            name='category',
            options={'verbose_name': 'Настройки категории', 'verbose_name_plural': 'Настройки категорий'},
        ),
        migrations.AlterField(
            model_name='articleversion',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='web.article', verbose_name='Статья'),
        ),
        migrations.CreateModel(
            name='ForumThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.article', verbose_name='Статья (если это комментарии)')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='web.forumcategory', verbose_name='Раздел (если это тема)')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.site', verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Тема форума',
                'verbose_name_plural': 'Темы форума',
            },
        ),
        migrations.CreateModel(
            name='ForumSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('order', models.IntegerField(default=0, verbose_name='Порядок сортировки')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Скрытая категория')),
                ('is_hidden_for_users', models.BooleanField(default=False, verbose_name='Видима только модераторам')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.site', verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Категория форума',
                'verbose_name_plural': 'Категории форума',
            },
        ),
        migrations.CreateModel(
            name='ForumPostVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.TextField(verbose_name='Текст сообщения')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.forumpost', verbose_name='Сообщение')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.site', verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Версия сообщения форума',
                'verbose_name_plural': 'Версии сообщений форума',
            },
        ),
        migrations.AddField(
            model_name='forumcategory',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='web.forumsection', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='forumcategory',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.site', verbose_name='Сайт'),
        ),
        migrations.AddConstraint(
            model_name='forumthread',
            constraint=models.CheckConstraint(check=django.db.models.lookups.Exact(lhs=django.db.models.expressions.Func('article_id', 'category_id', function='num_nonnulls', output_field=models.IntegerField()), rhs=django.db.models.expressions.Value(1)), name='web_forumthread_category_or_article'),
        ),
    ]
